{"schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"content":[{"type":"heading","text":"Overview","anchor":"Overview","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Kubrick Job dependencies can be bound to "},{"identifier":"doc:\/\/Kubrick\/documentation\/Kubrick\/JobInput","isActive":true,"type":"reference"},{"text":" values in a number of ways. The basic rule for binding a Job","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"result to a Job input is that the the generic types "},{"inlineContent":[{"type":"text","text":"must"}],"type":"emphasis"},{"text":" match.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"While the result and input value are required to match, there are methods for handling optionals and even a builder"},{"text":" ","type":"text"},{"type":"text","text":"API that makes it easy to bind using different types."}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"It’s important to not that "},{"identifier":"doc:\/\/Kubrick\/documentation\/Kubrick\/JobInput","isActive":true,"type":"reference"},{"type":"text","text":" values "},{"inlineContent":[{"text":"must","type":"text"}],"type":"emphasis"},{"type":"text","text":" be bound in the Job’s initializer. Attempting execution"},{"type":"text","text":" "},{"text":"of a Job with unbound input will cause an error to be thrown.","type":"text"}]}],"style":"note","name":"Note","type":"aside"},{"level":2,"text":"Binding to a constant","anchor":"Binding-to-a-constant","type":"heading"},{"inlineContent":[{"identifier":"doc:\/\/Kubrick\/documentation\/Kubrick\/JobInput","type":"reference","isActive":true},{"text":" values can be bound to constants using the ","type":"text"},{"type":"reference","identifier":"doc:\/\/Kubrick\/documentation\/Kubrick\/JobBinding\/bind(value:)","isActive":true},{"text":".","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["struct RandomIntJob: ResultJob {} \/\/ Returns `Int`","","struct ExampleJob: SubmittableJob, Codable {","","  @JobInput var integer: Int","","  init() {","    self.$integer.bind(value: 10)","  }","","}"],"type":"codeListing"},{"type":"aside","style":"tip","name":"Tip","content":[{"inlineContent":[{"type":"text","text":""},{"isActive":true,"type":"reference","identifier":"doc:\/\/Kubrick\/documentation\/Kubrick\/JobInput"},{"type":"text","text":" values support much easier binding for constants using the assignment operator!"}],"type":"paragraph"}]},{"syntax":"swift","code":["self.integer = 10"],"type":"codeListing"},{"type":"heading","level":2,"text":"Binding to a Job result","anchor":"Binding-to-a-Job-result"},{"inlineContent":[{"type":"text","text":"The simplest method used to bind inputs to Job results is using the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Kubrick\/documentation\/Kubrick\/JobBinding\/bind(job:)-87syz"},{"type":"text","text":"."}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["struct RandomIntJob: ResultJob {} \/\/ Returns `Int`","","struct ExampleJob: SubmittableJob, Codable {","","  @JobInput var integer: Int","","  init() {","    self.$integer.bind(job: RandomIntJob())","  }","","}"]},{"text":"Optional Jobs to optional inputs","type":"heading","level":3,"anchor":"Optional-Jobs-to-optional-inputs"},{"inlineContent":[{"text":"When binding to an optional input value, the ","type":"text"},{"identifier":"doc:\/\/Kubrick\/documentation\/Kubrick\/JobBinding\/bind(job:)-5sr2w","type":"reference","isActive":true},{"type":"text","text":" function allows"},{"type":"text","text":" "},{"type":"text","text":"passing an optional Job itself, which it will map to an optional Job result."}],"type":"paragraph"},{"syntax":"swift","code":["struct RandomIntJob: ResultJob {} \/\/ Returns `Int`","","struct ExampleJob: SubmittableJob, Codable {","","  @JobInput var integer: Int?","","  init(shouldBind: Bool) {","    self.$integer.bind(job: shouldBind ? RandomIntJob() : nil)","  }","","}"],"type":"codeListing"},{"level":2,"anchor":"Binding-using-the-Job-builder","text":"Binding using the Job builder","type":"heading"},{"inlineContent":[{"type":"text","text":"Kubrick provides the "},{"type":"reference","identifier":"doc:\/\/Kubrick\/documentation\/Kubrick\/JobBinding\/bind(builder:)","isActive":true},{"type":"text","text":" result builder to allow easier binding when the Job type may be"},{"type":"text","text":" "},{"type":"text","text":"different (e.g. "},{"type":"codeVoice","code":"if"},{"text":"\/","type":"text"},{"code":"else","type":"codeVoice"},{"type":"text","text":" or "},{"type":"codeVoice","code":"switch"},{"type":"text","text":")."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Using "},{"type":"codeVoice","code":"if"},{"type":"text","text":"\/"},{"type":"codeVoice","code":"else"},{"text":"…","type":"text"}]},{"type":"codeListing","code":["struct ConstantIntJob: ResultJob {} \/\/ Returns `Int`","struct RandomIntJob: ResultJob {} \/\/ Returns `Int`","","struct ExampleJob: SubmittableJob, Codable {","","  @JobInput var integer: Int?","","  init(useRandom: Bool) {","    self.$integer.bind {","      if useRandom {","        RandomIntJob()","      }","      else {","        ConstantIntJob()","      }","    }","  }","","}"],"syntax":"swift"}],"kind":"content"}],"sections":[],"metadata":{"color":{"standardColorIdentifier":"purple"},"role":"article","roleHeading":"Article","title":"Binding Dependent Jobs","modules":[{"name":"Kubrick"}]},"kind":"article","variants":[{"paths":["\/documentation\/kubrick\/bindingdependentjobs"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Kubrick\/documentation\/Kubrick\/BindingDependentJobs"},"abstract":[{"text":"Details of the different ways to bind Dependent Jobs to inputs.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/Kubrick\/documentation\/Kubrick"]]},"references":{"doc://Kubrick/documentation/Kubrick/JobBinding/bind(value:)":{"url":"\/documentation\/kubrick\/jobbinding\/bind(value:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"bind"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"text":")","kind":"text"}],"identifier":"doc:\/\/Kubrick\/documentation\/Kubrick\/JobBinding\/bind(value:)","type":"topic","abstract":[],"title":"bind(value:)","role":"symbol"},"doc://Kubrick/documentation/Kubrick/JobBinding/bind(builder:)":{"type":"topic","url":"\/documentation\/kubrick\/jobbinding\/bind(builder:)","identifier":"doc:\/\/Kubrick\/documentation\/Kubrick\/JobBinding\/bind(builder:)","kind":"symbol","abstract":[],"role":"symbol","title":"bind(builder:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"bind","kind":"identifier"},{"text":"<","kind":"text"},{"text":"SourceJob","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"builder"},{"text":": () ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"SourceJob","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"}]},"doc://Kubrick/documentation/Kubrick":{"identifier":"doc:\/\/Kubrick\/documentation\/Kubrick","role":"collection","kind":"symbol","images":[{"identifier":"logo.png","type":"icon"}],"type":"topic","abstract":[{"text":"Director for persistent, resilient, idempotent, asynchronous Jobs built on Swift concurrency.","type":"text"}],"title":"Kubrick","url":"\/documentation\/kubrick"},"doc://Kubrick/documentation/Kubrick/JobInput":{"type":"topic","url":"\/documentation\/kubrick\/jobinput","title":"JobInput","kind":"symbol","navigatorTitle":[{"text":"JobInput","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/Kubrick\/documentation\/Kubrick\/JobInput","abstract":[],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"JobInput"}]},"logo.png":{"alt":null,"variants":[{"traits":["1x","light"],"url":"\/images\/logo.png"},{"url":"\/images\/logo@2x.png","traits":["2x","light"]}],"type":"image","identifier":"logo.png"},"doc://Kubrick/documentation/Kubrick/JobBinding/bind(job:)-5sr2w":{"url":"\/documentation\/kubrick\/jobbinding\/bind(job:)-5sr2w","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"bind"},{"kind":"text","text":"<"},{"text":"WrappedValue","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"SourceJob","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"job"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SourceJob"},{"text":"?)","kind":"text"}],"identifier":"doc:\/\/Kubrick\/documentation\/Kubrick\/JobBinding\/bind(job:)-5sr2w","type":"topic","abstract":[],"title":"bind(job:)","role":"symbol"},"doc://Kubrick/documentation/Kubrick/JobBinding/bind(job:)-87syz":{"url":"\/documentation\/kubrick\/jobbinding\/bind(job:)-87syz","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"bind","kind":"identifier"},{"kind":"text","text":"<"},{"text":"SourceJob","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"job"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SourceJob"},{"kind":"text","text":")"}],"identifier":"doc:\/\/Kubrick\/documentation\/Kubrick\/JobBinding\/bind(job:)-87syz","abstract":[],"type":"topic","title":"bind(job:)","role":"symbol"}}}