{"interfaceLanguages":{"swift":[{"children":[{"title":"Essentials","type":"groupMarker"},{"path":"\/documentation\/kubrick\/gettingstarted","title":"Getting Started","type":"article"},{"title":"Articles","type":"groupMarker"},{"path":"\/documentation\/kubrick\/bindingdependentjobs","title":"Binding Dependent Jobs","type":"article"},{"path":"\/documentation\/kubrick\/jobdirectors","title":"Job Directors","type":"article"},{"path":"\/documentation\/kubrick\/jobstore","title":"Job Store","type":"article"},{"path":"\/documentation\/kubrick\/urlsessionjobs","title":"URLSession Jobs","type":"article"},{"path":"\/documentation\/kubrick\/usernotificationjobs","title":"User Notification Jobs","type":"article"},{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kubrick\/jobdirector\/init(id:directory:mode:jobtyperesolver:errortyperesolver:)","title":"convenience init(id: JobDirectorID, directory: URL, mode: JobDirectorMode, jobTypeResolver: SubmittableJobTypeResolver, errorTypeResolver: JobErrorTypeResolver) throws","type":"init"},{"path":"\/documentation\/kubrick\/jobdirector\/init(id:directory:mode:typeresolver:)","title":"convenience init(id: JobDirectorID, directory: URL, mode: JobDirectorMode, typeResolver: JobErrorTypeResolver & SubmittableJobTypeResolver) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kubrick\/jobdirector\/id-swift.property","title":"let id: JobDirector.ID","type":"property"},{"path":"\/documentation\/kubrick\/jobdirector\/injected","title":"let injected: JobInjectValues","type":"property"},{"path":"\/documentation\/kubrick\/jobdirector\/mode","title":"let mode: JobDirectorMode","type":"property"},{"path":"\/documentation\/kubrick\/jobdirector\/submittedjobcount","title":"var submittedJobCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/jobdirector\/decode(_:from:)","title":"func decode<Value>(Value.Type, from: Data) throws -> Value","type":"method"},{"path":"\/documentation\/kubrick\/jobdirector\/encode(_:)","title":"func encode(some Encodable) throws -> Data","type":"method"},{"path":"\/documentation\/kubrick\/jobdirector\/start()","title":"func start() async throws","type":"method"},{"path":"\/documentation\/kubrick\/jobdirector\/stop(completionwaittimeout:)","title":"func stop(completionWaitTimeout: TimeInterval?) async throws","type":"method"},{"path":"\/documentation\/kubrick\/jobdirector\/submit(_:as:deduplicationwindow:)","title":"func submit(some SubmittableJob, as: JobID, deduplicationWindow: TimeDuration) async throws -> Bool","type":"method"},{"path":"\/documentation\/kubrick\/jobdirector\/transfertoprincipal()","title":"func transferToPrincipal() throws","type":"method"},{"path":"\/documentation\/kubrick\/jobdirector\/waitforcompletionofcurrentjobs(timeout:)","title":"func waitForCompletionOfCurrentJobs(timeout: TimeInterval) async throws","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/kubrick\/jobdirector\/id-swift.typealias","title":"JobDirector.ID","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/kubrick\/jobdirector\/state\/created","title":"case created","type":"case"},{"path":"\/documentation\/kubrick\/jobdirector\/state\/running","title":"case running","type":"case"},{"path":"\/documentation\/kubrick\/jobdirector\/state\/stopped","title":"case stopped","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kubrick\/jobdirector\/state\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kubrick\/jobdirector\/state\/description","title":"var description: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/kubrick\/jobdirector\/state\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/kubrick\/jobdirector\/state\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kubrick\/jobdirector\/state\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/jobdirector\/state\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/kubrick\/jobdirector\/state\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/kubrick\/jobdirector\/state","title":"JobDirector.State","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/jobdirector\/assertisolated(_:file:line:)","title":"func assertIsolated(() -> String, file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/kubrick\/jobdirector\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"path":"\/documentation\/kubrick\/jobdirector\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(() -> String, file: StaticString, line: UInt)","type":"method"}],"path":"\/documentation\/kubrick\/jobdirector\/actor-implementations","title":"Actor Implementations","type":"symbol"}],"path":"\/documentation\/kubrick\/jobdirector","title":"JobDirector","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kubrick\/jobinjectvalues\/init(values:)","title":"init(values: [String : Any])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kubrick\/jobinjectvalues\/values","title":"var values: [String : Any]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/jobinjectvalues\/provide(_:tags:fortype:)-1xi1a","title":"func provide<Dependency>(Dependency, tags: String..., forType: Dependency.Type)","type":"method"},{"path":"\/documentation\/kubrick\/jobinjectvalues\/provide(_:tags:fortype:)-3l775","title":"func provide<Dependency>(Dependency, tags: [String], forType: Dependency.Type)","type":"method"},{"path":"\/documentation\/kubrick\/jobinjectvalues\/provide(_:tags:fortype:)-4ak9k","title":"func provide<Dependency, Tag>(Dependency, tags: Tag..., forType: Dependency.Type)","type":"method"},{"path":"\/documentation\/kubrick\/jobinjectvalues\/provide(_:tags:fortype:)-577rm","title":"func provide<Dependency, Tag>(Dependency, tags: [Tag], forType: Dependency.Type)","type":"method"},{"path":"\/documentation\/kubrick\/jobinjectvalues\/stop()","title":"func stop() async","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/kubrick\/jobinjectvalues\/subscript(_:)","title":"subscript<Dependency>(JobInjectKey<Dependency>) -> Dependency","type":"subscript"},{"path":"\/documentation\/kubrick\/jobinjectvalues\/subscript(_:tags:)-3ydul","title":"subscript<Dependency, Tag>(Dependency.Type, tags _: [Tag]) -> Dependency","type":"subscript"},{"path":"\/documentation\/kubrick\/jobinjectvalues\/subscript(_:tags:)-4v3d9","title":"subscript<Dependency>(Dependency.Type, tags _: String...) -> Dependency","type":"subscript"},{"path":"\/documentation\/kubrick\/jobinjectvalues\/subscript(_:tags:)-643qe","title":"subscript<Dependency, Tag>(Dependency.Type, tags _: Tag...) -> Dependency","type":"subscript"},{"path":"\/documentation\/kubrick\/jobinjectvalues\/subscript(_:tags:)-8pv7d","title":"subscript<Dependency>(Dependency.Type, tags _: [String]) -> Dependency","type":"subscript"}],"path":"\/documentation\/kubrick\/jobinjectvalues","title":"JobInjectValues","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kubrick\/registercache\/nullstore\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/registercache\/nullstore\/removevalue(forkey:)","title":"func removeValue(forKey: Key) async throws","type":"method"},{"path":"\/documentation\/kubrick\/registercache\/nullstore\/removevalues(forkeys:)","title":"func removeValues(forKeys: Set<Key>) async throws","type":"method"},{"path":"\/documentation\/kubrick\/registercache\/nullstore\/updatevalue(_:forkey:)","title":"func updateValue(Value, forKey: Key) async throws","type":"method"},{"path":"\/documentation\/kubrick\/registercache\/nullstore\/value(forkey:)","title":"func value(forKey: Key) async throws -> Value?","type":"method"}],"path":"\/documentation\/kubrick\/registercache\/nullstore","title":"RegisterCache.NullStore","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kubrick\/registercache\/init(store:)","title":"init(store: RegisterCacheStore<Key, Value>)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/registercache\/deregister(for:)","title":"func deregister(for: Key) async throws","type":"method"},{"path":"\/documentation\/kubrick\/registercache\/register(for:initializer:)","title":"func register(for: Key, initializer: () async throws -> Value) async throws -> Value","type":"method"},{"path":"\/documentation\/kubrick\/registercache\/stop()","title":"func stop() async","type":"method"},{"path":"\/documentation\/kubrick\/registercache\/valueifregistered(for:)","title":"func valueIfRegistered(for: Key) async throws -> Value?","type":"method"},{"path":"\/documentation\/kubrick\/registercache\/valuewhenavailable(for:)","title":"func valueWhenAvailable(for: Key) async throws -> Value","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/registercache\/assertisolated(_:file:line:)","title":"func assertIsolated(() -> String, file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/kubrick\/registercache\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"path":"\/documentation\/kubrick\/registercache\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(() -> String, file: StaticString, line: UInt)","type":"method"}],"path":"\/documentation\/kubrick\/registercache\/actor-implementations","title":"Actor Implementations","type":"symbol"}],"path":"\/documentation\/kubrick\/registercache","title":"RegisterCache","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kubrick\/urlsessionjobmanager\/init(director:primaryconfiguration:primarydelegate:primarysessiondescription:)","title":"init(director: JobDirector, primaryConfiguration: URLSessionConfiguration, primaryDelegate: URLSessionJobManagerDelegate?, primarySessionDescription: String?)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/urlsessionjobmanager\/addsecondarysession(configuration:delegate:description:)","title":"func addSecondarySession(configuration: URLSessionConfiguration, delegate: URLSessionJobManagerDelegate?, description: String?)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/kubrick\/urlsessionjobmanager\/onprogress","title":"URLSessionJobManager.OnProgress","type":"typealias"},{"path":"\/documentation\/kubrick\/urlsessionjobmanager\/onstart","title":"URLSessionJobManager.OnStart","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/urlsessionjobmanager\/assertisolated(_:file:line:)","title":"func assertIsolated(() -> String, file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/kubrick\/urlsessionjobmanager\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"path":"\/documentation\/kubrick\/urlsessionjobmanager\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(() -> String, file: StaticString, line: UInt)","type":"method"}],"path":"\/documentation\/kubrick\/urlsessionjobmanager\/actor-implementations","title":"Actor Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/urlsessionjobmanager\/stop()","title":"func stop() async","type":"method"}],"path":"\/documentation\/kubrick\/urlsessionjobmanager\/jobinjectmanagable-implementations","title":"JobInjectManagable Implementations","type":"symbol"}],"path":"\/documentation\/kubrick\/urlsessionjobmanager","title":"URLSessionJobManager","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/urlsessionjobmanagerdelegate\/queuetask(session:operation:)","title":"func queueTask(session: URLSession, operation: () async throws -> Void)","type":"method"},{"path":"\/documentation\/kubrick\/urlsessionjobmanagerdelegate\/urlsession(_:downloadtask:didfinishdownloadingto:)","title":"func urlSession(URLSession, downloadTask: URLSessionDownloadTask, didFinishDownloadingTo: URL)","type":"method"},{"path":"\/documentation\/kubrick\/urlsessionjobmanagerdelegate\/urlsession(_:downloadtask:didwritedata:totalbyteswritten:totalbytesexpectedtowrite:)","title":"func urlSession(URLSession, downloadTask: URLSessionDownloadTask, didWriteData: Int64, totalBytesWritten: Int64, totalBytesExpectedToWrite: Int64)","type":"method"},{"path":"\/documentation\/kubrick\/urlsessionjobmanagerdelegate\/urlsession(_:task:didcompletewitherror:)","title":"func urlSession(URLSession, task: URLSessionTask, didCompleteWithError: Error?)","type":"method"},{"path":"\/documentation\/kubrick\/urlsessionjobmanagerdelegate\/urlsession(_:task:didsendbodydata:totalbytessent:totalbytesexpectedtosend:)","title":"func urlSession(URLSession, task: URLSessionTask, didSendBodyData: Int64, totalBytesSent: Int64, totalBytesExpectedToSend: Int64)","type":"method"}],"path":"\/documentation\/kubrick\/urlsessionjobmanagerdelegate","title":"URLSessionJobManagerDelegate","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kubrick\/usernotificationjobmanager\/init(director:)","title":"init(director: JobDirector)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/usernotificationjobmanager\/show(content:trigger:)","title":"func show(content: UNNotificationContent, trigger: UNNotificationTrigger?) async throws -> UNNotificationResponse","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/usernotificationjobmanager\/assertisolated(_:file:line:)","title":"func assertIsolated(() -> String, file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/kubrick\/usernotificationjobmanager\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"path":"\/documentation\/kubrick\/usernotificationjobmanager\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(() -> String, file: StaticString, line: UInt)","type":"method"}],"path":"\/documentation\/kubrick\/usernotificationjobmanager\/actor-implementations","title":"Actor Implementations","type":"symbol"}],"path":"\/documentation\/kubrick\/usernotificationjobmanager","title":"UserNotificationJobManager","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/dynamicjobdirector\/result(for:)-4bxeo","title":"func result<DynamicJob>(for: DynamicJob) async -> ExecuteResult<DynamicJob.Value>","type":"method"},{"path":"\/documentation\/kubrick\/dynamicjobdirector\/result(for:)-95pvn","title":"func result<DynamicJob>(for: DynamicJob) async -> ExecuteResult<Void>","type":"method"},{"path":"\/documentation\/kubrick\/dynamicjobdirector\/run(job:)-1efzl","title":"func run<DynamicJob>(job: DynamicJob) async throws","type":"method"},{"path":"\/documentation\/kubrick\/dynamicjobdirector\/run(job:)-5crqv","title":"func run<DynamicJob>(job: DynamicJob) async throws -> DynamicJob.Value","type":"method"}],"path":"\/documentation\/kubrick\/dynamicjobdirector","title":"DynamicJobDirector","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/executablejob\/catch(handler:)","title":"func `catch`(handler: (Error) async throws -> Void) -> some Job<NoValue>\n","type":"method"},{"path":"\/documentation\/kubrick\/executablejob\/execute()","title":"func execute() async throws","type":"method"},{"path":"\/documentation\/kubrick\/executablejob\/map(_:)","title":"func map<NewValue>(() async throws -> NewValue) -> some Job<NewValue>\n","type":"method"}],"path":"\/documentation\/kubrick\/executablejob","title":"ExecutableJob","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/kubrick\/job\/value","title":"Value","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/kubrick\/job\/inputdescriptors-9zkw4","title":"var inputDescriptors: [JobInputDescriptor]","type":"property"}],"title":"Job Implementations","type":"groupMarker"}],"path":"\/documentation\/kubrick\/job\/inputdescriptors-169y3","title":"var inputDescriptors: [JobInputDescriptor]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/job\/catch(handler:)","title":"func `catch`(handler: (Error) async throws -> Self.Value) -> some Job<Self.Value>\n","type":"method"},{"children":[{"children":[{"path":"\/documentation\/kubrick\/job\/execute(as:with:for:)-72jbl","title":"func execute(as: JobKey, with: JobInputResults, for: JobDirector) async -> JobResult<Self.Value>","type":"method"},{"path":"\/documentation\/kubrick\/job\/execute(as:with:for:)-59l4u","title":"func execute(as: JobKey, with: JobInputResults, for: JobDirector) async -> JobResult<Self.Value>","type":"method"},{"path":"\/documentation\/kubrick\/job\/execute(as:with:for:)-3t0xc","title":"func execute(as: JobKey, with: JobInputResults, for: JobDirector) async -> JobResult<Self.Value>","type":"method"}],"title":"Job Implementations","type":"groupMarker"}],"path":"\/documentation\/kubrick\/job\/execute(as:with:for:)-6kvba","title":"func execute(as: JobKey, with: JobInputResults, for: JobDirector) async throws -> JobResult<Self.Value>","type":"method"},{"children":[{"children":[{"path":"\/documentation\/kubrick\/job\/finished()-4z4ny","title":"func finished() async","type":"method"}],"title":"Job Implementations","type":"groupMarker"}],"path":"\/documentation\/kubrick\/job\/finished()-7ye9c","title":"func finished() async","type":"method"},{"path":"\/documentation\/kubrick\/job\/map(_:)","title":"func map<NewValue>((Self.Value) async throws -> NewValue) -> some Job<NewValue>\n","type":"method"},{"path":"\/documentation\/kubrick\/job\/maptoresult()","title":"func mapToResult() -> some Job<ExecuteResult<Self.Value>>\n","type":"method"},{"path":"\/documentation\/kubrick\/job\/retry(filter:)","title":"func retry(filter: (Error, Int) async -> Bool) -> some Job<Self.Value>\n","type":"method"},{"path":"\/documentation\/kubrick\/job\/retry(maxattempts:)","title":"func retry(maxAttempts: Int) -> some Job<Self.Value>\n","type":"method"}],"path":"\/documentation\/kubrick\/job","title":"Job","type":"protocol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/jobcodable\/restore(from:environment:)","title":"static func restore(from: Decoder, environment: JobEnvironment) throws -> Self","type":"method"},{"path":"\/documentation\/kubrick\/jobcodable\/save(_:to:environment:)","title":"static func save(Self, to: Encoder, environment: JobEnvironment) throws","type":"method"}],"path":"\/documentation\/kubrick\/jobcodable","title":"JobCodable","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/kubrick\/jobenvironmentkey\/value","title":"Value","type":"associatedtype"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/kubrick\/jobenvironmentkey\/type","title":"static var type: Self.Value.Type","type":"property"}],"path":"\/documentation\/kubrick\/jobenvironmentkey","title":"JobEnvironmentKey","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/joberrortyperesolver\/resolve(errordomain:)","title":"func resolve(errorDomain: String) -> JobError.Type?","type":"method"}],"path":"\/documentation\/kubrick\/joberrortyperesolver","title":"JobErrorTypeResolver","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/kubrick\/jobhashable\/jobhash(into:)-5sp6s","title":"func jobHash<Hasher>(into: inout Hasher) throws","type":"method"}],"title":"JobHashable Implementations","type":"groupMarker"}],"path":"\/documentation\/kubrick\/jobhashable\/jobhash(into:)-1z6w","title":"func jobHash<Hasher>(into: inout Hasher) throws","type":"method"}],"path":"\/documentation\/kubrick\/jobhashable","title":"JobHashable","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/kubrick\/jobinputdescriptor\/value","title":"Value","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/kubrick\/jobinputdescriptor\/isunbound-171vw","title":"var isUnbound: Bool","type":"property"}],"title":"JobInputDescriptor Implementations","type":"groupMarker"}],"path":"\/documentation\/kubrick\/jobinputdescriptor\/isunbound-53a00","title":"var isUnbound: Bool","type":"property"},{"children":[{"children":[{"path":"\/documentation\/kubrick\/jobinputdescriptor\/reporttype-2c68u","title":"var reportType: Self.Value.Type","type":"property"}],"title":"JobInputDescriptor Implementations","type":"groupMarker"}],"path":"\/documentation\/kubrick\/jobinputdescriptor\/reporttype-4ghrw","title":"var reportType: Self.Value.Type","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/jobinputdescriptor\/resolve(for:as:tags:)","title":"func resolve(for: JobDirector, as: JobID, tags: [String]) async throws -> (id: UUID, result: JobInputResult<Self.Value>)","type":"method"}],"path":"\/documentation\/kubrick\/jobinputdescriptor","title":"JobInputDescriptor","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/kubrick\/registercachestore\/key","title":"Key","type":"associatedtype"},{"path":"\/documentation\/kubrick\/registercachestore\/value","title":"Value","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/registercachestore\/removevalue(forkey:)","title":"func removeValue(forKey: Self.Key) async throws","type":"method"},{"path":"\/documentation\/kubrick\/registercachestore\/updatevalue(_:forkey:)","title":"func updateValue(Self.Value, forKey: Self.Key) async throws","type":"method"},{"path":"\/documentation\/kubrick\/registercachestore\/value(forkey:)","title":"func value(forKey: Self.Key) async throws -> Self.Value?","type":"method"}],"path":"\/documentation\/kubrick\/registercachestore","title":"RegisterCacheStore","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/kubrick\/resultjob\/resultvalue","title":"ResultValue","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/resultjob\/execute()","title":"func execute() async throws -> Self.ResultValue","type":"method"}],"path":"\/documentation\/kubrick\/resultjob","title":"ResultJob","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/submittablejob\/execute()","title":"func execute() async","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/kubrick\/submittablejob\/typeid-3yntt","title":"static var typeId: String","type":"property"}],"title":"SubmittableJob Implementations","type":"groupMarker"}],"path":"\/documentation\/kubrick\/submittablejob\/typeid-2ew12","title":"static var typeId: String","type":"property"}],"path":"\/documentation\/kubrick\/submittablejob","title":"SubmittableJob","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/submittablejobtyperesolver\/resolve(jobtypeid:)","title":"func resolve(jobTypeId: String) throws -> SubmittableJob.Type","type":"method"},{"path":"\/documentation\/kubrick\/submittablejobtyperesolver\/typeid(of:)","title":"func typeId(of: SubmittableJob.Type) -> String","type":"method"}],"path":"\/documentation\/kubrick\/submittablejobtyperesolver","title":"SubmittableJobTypeResolver","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kubrick\/adhocjobinputdescriptor\/init(id:job:)","title":"init(id: UUID, job: SourceJob)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kubrick\/adhocjobinputdescriptor\/id","title":"var id: UUID","type":"property"},{"path":"\/documentation\/kubrick\/adhocjobinputdescriptor\/job","title":"var job: SourceJob","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/adhocjobinputdescriptor\/resolve(for:as:tags:)","title":"func resolve(for: JobDirector, as: JobID, tags: [String]) async throws -> (id: UUID, result: JobInputResult<SourceJob.Value>)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kubrick\/adhocjobinputdescriptor\/isunbound","title":"var isUnbound: Bool","type":"property"},{"path":"\/documentation\/kubrick\/adhocjobinputdescriptor\/reporttype","title":"var reportType: Self.Value.Type","type":"property"}],"path":"\/documentation\/kubrick\/adhocjobinputdescriptor\/jobinputdescriptor-implementations","title":"JobInputDescriptor Implementations","type":"symbol"}],"path":"\/documentation\/kubrick\/adhocjobinputdescriptor","title":"AdHocJobInputDescriptor","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kubrick\/batchjob\/init(_:block:)-339ca","title":"init<S>(S, block: (S.Element) throws -> BatchJob<Key, ElementJobValue>.JobElement) rethrows","type":"init"},{"path":"\/documentation\/kubrick\/batchjob\/init(_:block:)-6qmm7","title":"init<V, S>(S, block: (Key, V) throws -> BatchJob<Key, ElementJobValue>.JobElement) rethrows","type":"init"},{"path":"\/documentation\/kubrick\/batchjob\/init(_:key:block:)","title":"init<S>(S, key: KeyPath<S.Element, Key>, block: (S.Element) throws -> BatchJob<Key, ElementJobValue>.JobElement) rethrows","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kubrick\/batchjob\/inputdescriptors","title":"var inputDescriptors: [JobInputDescriptor]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/batchjob\/execute(as:with:for:)","title":"func execute(as: JobKey, with: JobInputResults, for: JobDirector) async -> JobResult<BatchJob<Key, ElementJobValue>.Value>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/kubrick\/batchjob\/jobelement","title":"BatchJob.JobElement","type":"typealias"},{"path":"\/documentation\/kubrick\/batchjob\/value","title":"BatchJob.Value","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/batchjob\/catch(handler:)","title":"func `catch`(handler: (Error) async throws -> Self.Value) -> some Job<Self.Value>\n","type":"method"},{"path":"\/documentation\/kubrick\/batchjob\/finished()","title":"func finished() async","type":"method"},{"path":"\/documentation\/kubrick\/batchjob\/map(_:)","title":"func map<NewValue>((Self.Value) async throws -> NewValue) -> some Job<NewValue>\n","type":"method"},{"path":"\/documentation\/kubrick\/batchjob\/maptoresult()","title":"func mapToResult() -> some Job<ExecuteResult<Self.Value>>\n","type":"method"},{"path":"\/documentation\/kubrick\/batchjob\/retry(filter:)","title":"func retry(filter: (Error, Int) async -> Bool) -> some Job<Self.Value>\n","type":"method"},{"path":"\/documentation\/kubrick\/batchjob\/retry(maxattempts:)","title":"func retry(maxAttempts: Int) -> some Job<Self.Value>\n","type":"method"}],"path":"\/documentation\/kubrick\/batchjob\/job-implementations","title":"Job Implementations","type":"symbol"}],"path":"\/documentation\/kubrick\/batchjob","title":"BatchJob","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kubrick\/catchjob\/inputdescriptors","title":"var inputDescriptors: [JobInputDescriptor]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/catchjob\/execute(as:with:for:)","title":"func execute(as: JobKey, with: JobInputResults, for: JobDirector) async -> JobResult<CatchJob<SourceJob>.Value>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/kubrick\/catchjob\/value","title":"CatchJob.Value","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/catchjob\/catch(handler:)","title":"func `catch`(handler: (Error) async throws -> Self.Value) -> some Job<Self.Value>\n","type":"method"},{"path":"\/documentation\/kubrick\/catchjob\/finished()","title":"func finished() async","type":"method"},{"path":"\/documentation\/kubrick\/catchjob\/map(_:)","title":"func map<NewValue>((Self.Value) async throws -> NewValue) -> some Job<NewValue>\n","type":"method"},{"path":"\/documentation\/kubrick\/catchjob\/maptoresult()","title":"func mapToResult() -> some Job<ExecuteResult<Self.Value>>\n","type":"method"},{"path":"\/documentation\/kubrick\/catchjob\/retry(filter:)","title":"func retry(filter: (Error, Int) async -> Bool) -> some Job<Self.Value>\n","type":"method"},{"path":"\/documentation\/kubrick\/catchjob\/retry(maxattempts:)","title":"func retry(maxAttempts: Int) -> some Job<Self.Value>\n","type":"method"}],"path":"\/documentation\/kubrick\/catchjob\/job-implementations","title":"Job Implementations","type":"symbol"}],"path":"\/documentation\/kubrick\/catchjob","title":"CatchJob","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kubrick\/externaljobkey\/init(directorid:jobkey:)","title":"init(directorId: JobDirectorID, jobKey: JobKey)","type":"init"},{"path":"\/documentation\/kubrick\/externaljobkey\/init(string:)","title":"init?(string: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kubrick\/externaljobkey\/directorid","title":"var directorId: JobDirectorID","type":"property"},{"path":"\/documentation\/kubrick\/externaljobkey\/jobkey","title":"var jobKey: JobKey","type":"property"},{"path":"\/documentation\/kubrick\/externaljobkey\/value","title":"var value: String","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/externaljobkey\/parse(string:)","title":"static func parse(string: String) -> ExternalJobKey?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kubrick\/externaljobkey\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/kubrick\/externaljobkey\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kubrick\/externaljobkey\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/kubrick\/externaljobkey\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/externaljobkey\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/kubrick\/externaljobkey\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/kubrick\/externaljobkey\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/kubrick\/externaljobkey\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/kubrick\/externaljobkey","title":"ExternalJobKey","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kubrick\/jobbinding\/init()","title":"init()","type":"init"},{"path":"\/documentation\/kubrick\/jobbinding\/init(_:)","title":"init(Value)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/jobbinding\/bind(builder:)","title":"func bind<SourceJob>(builder: () throws -> SourceJob) rethrows","type":"method"},{"path":"\/documentation\/kubrick\/jobbinding\/bind(job:)-5sr2w","title":"func bind<WrappedValue, SourceJob>(job: SourceJob?)","type":"method"},{"path":"\/documentation\/kubrick\/jobbinding\/bind(job:)-87syz","title":"func bind<SourceJob>(job: SourceJob)","type":"method"},{"path":"\/documentation\/kubrick\/jobbinding\/bind(job:)-9mqbp","title":"func bind<WrappedValue, SourceJob>(job: SourceJob?)","type":"method"},{"path":"\/documentation\/kubrick\/jobbinding\/bind(value:)","title":"func bind(value: Value)","type":"method"}],"path":"\/documentation\/kubrick\/jobbinding","title":"JobBinding","type":"struct"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/jobbuilder\/buildblock(_:)","title":"static func buildBlock<RJ>(RJ) -> some Job<Result>\n","type":"method"},{"path":"\/documentation\/kubrick\/jobbuilder\/buildeither(first:)","title":"static func buildEither<FJ, SJ>(first: FJ) -> _ConditionalJob<Result, FJ, SJ>","type":"method"},{"path":"\/documentation\/kubrick\/jobbuilder\/buildeither(second:)","title":"static func buildEither<FJ, SJ>(second: SJ) -> _ConditionalJob<Result, FJ, SJ>","type":"method"},{"path":"\/documentation\/kubrick\/jobbuilder\/buildexpression(_:)-2hehm","title":"static func buildExpression(Never) -> some Job<Result>\n","type":"method"},{"path":"\/documentation\/kubrick\/jobbuilder\/buildexpression(_:)-47fi2","title":"static func buildExpression<RJ>(RJ?) -> (some Job<Result>)?\n","type":"method"},{"path":"\/documentation\/kubrick\/jobbuilder\/buildexpression(_:)-4r41o","title":"static func buildExpression<Wrapped, RJ>(RJ) -> some Job<Optional<Wrapped>>\n","type":"method"},{"path":"\/documentation\/kubrick\/jobbuilder\/buildexpression(_:)-6h4sz","title":"static func buildExpression<Wrapped, RJ>(RJ) -> some Job<Optional<Wrapped>>\n","type":"method"},{"path":"\/documentation\/kubrick\/jobbuilder\/buildexpression(_:)-6sp3","title":"static func buildExpression<Wrapped, RJ>(RJ?) -> some Job<Optional<Wrapped>>\n","type":"method"},{"path":"\/documentation\/kubrick\/jobbuilder\/buildexpression(_:)-7w7mr","title":"static func buildExpression<RJ>(RJ) -> some Job<Result>\n","type":"method"},{"path":"\/documentation\/kubrick\/jobbuilder\/buildexpression(_:)-9jkka","title":"static func buildExpression<Wrapped, RJ>(RJ?) -> some Job<Optional<Wrapped>>\n","type":"method"},{"path":"\/documentation\/kubrick\/jobbuilder\/buildoptional(_:)","title":"static func buildOptional<Wrapped, RJ>(RJ?) -> some Job<Optional<Wrapped>>\n","type":"method"}],"path":"\/documentation\/kubrick\/jobbuilder","title":"JobBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kubrick\/jobdirectorid\/init(_:)","title":"init?(String)","type":"init"},{"path":"\/documentation\/kubrick\/jobdirectorid\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kubrick\/jobdirectorid\/rawvalue","title":"var rawValue: String","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/jobdirectorid\/generate()","title":"static func generate() -> JobDirectorID","type":"method"},{"path":"\/documentation\/kubrick\/jobdirectorid\/validate(string:)","title":"static func validate(string: String) -> Bool","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kubrick\/jobdirectorid\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/kubrick\/jobdirectorid\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kubrick\/jobdirectorid\/init(from:)-54ru4","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/kubrick\/jobdirectorid\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/jobdirectorid\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/kubrick\/jobdirectorid\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/kubrick\/jobdirectorid\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/kubrick\/jobdirectorid\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kubrick\/jobdirectorid\/init(from:)-ugyd","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kubrick\/jobdirectorid\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/jobdirectorid\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/kubrick\/jobdirectorid\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/kubrick\/jobdirectorid","title":"JobDirectorID","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kubrick\/jobenvironment\/currentjobdirector","title":"var currentJobDirector: JobDirector","type":"property"},{"path":"\/documentation\/kubrick\/jobenvironment\/currentjobinputresults","title":"var currentJobInputResults: JobInputResults","type":"property"},{"path":"\/documentation\/kubrick\/jobenvironment\/currentjobkey","title":"var currentJobKey: JobKey","type":"property"},{"path":"\/documentation\/kubrick\/jobenvironment\/dynamicjobs","title":"var dynamicJobs: DynamicJobDirector","type":"property"}],"path":"\/documentation\/kubrick\/jobenvironment","title":"JobEnvironment","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kubrick\/jobenvironmentvalue\/init(_:)","title":"init(KeyPath<JobEnvironment, Value>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kubrick\/jobenvironmentvalue\/wrappedvalue","title":"var wrappedValue: Value","type":"property"}],"path":"\/documentation\/kubrick\/jobenvironmentvalue","title":"JobEnvironmentValue","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kubrick\/joberrorbox\/init(_:)","title":"init(Error)","type":"init"},{"path":"\/documentation\/kubrick\/joberrorbox\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/joberrorbox\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/joberrorbox\/jobhash(into:)","title":"func jobHash<Hasher>(into: inout Hasher) throws","type":"method"}],"path":"\/documentation\/kubrick\/joberrorbox\/jobhashable-implementations","title":"JobHashable Implementations","type":"symbol"}],"path":"\/documentation\/kubrick\/joberrorbox","title":"JobErrorBox","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kubrick\/jobinject\/init(tags:)-5al9o","title":"init<Tag>(tags: Tag...)","type":"init"},{"path":"\/documentation\/kubrick\/jobinject\/init(tags:)-6e2y9","title":"init(tags: String...)","type":"init"},{"path":"\/documentation\/kubrick\/jobinject\/init(tags:)-7p0s0","title":"init<Tag>(tags: [Tag])","type":"init"},{"path":"\/documentation\/kubrick\/jobinject\/init(tags:)-9c1r1","title":"init(tags: [String])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kubrick\/jobinject\/wrappedvalue","title":"var wrappedValue: Dependency","type":"property"}],"path":"\/documentation\/kubrick\/jobinject","title":"JobInject","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kubrick\/jobinjectkey\/init(tags:)-3zcc1","title":"init(tags: [String])","type":"init"},{"path":"\/documentation\/kubrick\/jobinjectkey\/init(tags:)-9q6nh","title":"init<Tag>(tags: [Tag])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kubrick\/jobinjectkey\/tags","title":"var tags: [String]","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kubrick\/jobinjectkey\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/kubrick\/jobinjectkey\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"}],"path":"\/documentation\/kubrick\/jobinjectkey","title":"JobInjectKey","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kubrick\/jobinput\/init(projectedvalue:)","title":"init(projectedValue: JobBinding<Value>)","type":"init"},{"path":"\/documentation\/kubrick\/jobinput\/init(wrappedvalue:)","title":"init(wrappedValue: Value)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kubrick\/jobinput\/projectedvalue","title":"var projectedValue: JobBinding<Value>","type":"property"},{"path":"\/documentation\/kubrick\/jobinput\/wrappedvalue","title":"var wrappedValue: Value","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kubrick\/jobinput\/isunbound","title":"var isUnbound: Bool","type":"property"},{"path":"\/documentation\/kubrick\/jobinput\/reporttype","title":"var reportType: Value.Type","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/jobinput\/resolve(for:as:tags:)","title":"func resolve(for: JobDirector, as: JobID, tags: [String]) async throws -> (id: UUID, result: JobInputResult<Value>)","type":"method"}],"path":"\/documentation\/kubrick\/jobinput\/jobinputdescriptor-implementations","title":"JobInputDescriptor Implementations","type":"symbol"}],"path":"\/documentation\/kubrick\/jobinput","title":"JobInput","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kubrick\/jobkey\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/kubrick\/jobkey\/init(id:fingerprint:tags:)","title":"init(id: JobID, fingerprint: Data, tags: [String])","type":"init"},{"path":"\/documentation\/kubrick\/jobkey\/init(string:)","title":"init?(string: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kubrick\/jobkey\/fingerprint","title":"var fingerprint: Data","type":"property"},{"path":"\/documentation\/kubrick\/jobkey\/id","title":"var id: JobID","type":"property"},{"path":"\/documentation\/kubrick\/jobkey\/tags","title":"var tags: [String]","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kubrick\/jobkey\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/kubrick\/jobkey\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/kubrick\/jobkey\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/kubrick\/jobkey\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/kubrick\/jobkey","title":"JobKey","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kubrick\/mapjob\/init(source:transform:)","title":"init(source: SourceJob, transform: (SourceJob.Value) async throws -> NewValue)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kubrick\/mapjob\/inputdescriptors","title":"var inputDescriptors: [JobInputDescriptor]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/mapjob\/execute(as:with:for:)","title":"func execute(as: JobKey, with: JobInputResults, for: JobDirector) async -> JobResult<MapJob<SourceJob, NewValue>.Value>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/kubrick\/mapjob\/value","title":"MapJob.Value","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/mapjob\/catch(handler:)","title":"func `catch`(handler: (Error) async throws -> Self.Value) -> some Job<Self.Value>\n","type":"method"},{"path":"\/documentation\/kubrick\/mapjob\/finished()","title":"func finished() async","type":"method"},{"path":"\/documentation\/kubrick\/mapjob\/map(_:)","title":"func map<NewValue>((Self.Value) async throws -> NewValue) -> some Job<NewValue>\n","type":"method"},{"path":"\/documentation\/kubrick\/mapjob\/maptoresult()","title":"func mapToResult() -> some Job<ExecuteResult<Self.Value>>\n","type":"method"},{"path":"\/documentation\/kubrick\/mapjob\/retry(filter:)","title":"func retry(filter: (Error, Int) async -> Bool) -> some Job<Self.Value>\n","type":"method"},{"path":"\/documentation\/kubrick\/mapjob\/retry(maxattempts:)","title":"func retry(maxAttempts: Int) -> some Job<Self.Value>\n","type":"method"}],"path":"\/documentation\/kubrick\/mapjob\/job-implementations","title":"Job Implementations","type":"symbol"}],"path":"\/documentation\/kubrick\/mapjob","title":"MapJob","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kubrick\/retryjob\/inputdescriptors","title":"var inputDescriptors: [JobInputDescriptor]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/retryjob\/execute(as:with:for:)","title":"func execute(as: JobKey, with: JobInputResults, for: JobDirector) async -> JobResult<RetryJob<SourceJob, ResultValue>.Value>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/kubrick\/retryjob\/value","title":"RetryJob.Value","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/retryjob\/catch(handler:)","title":"func `catch`(handler: (Error) async throws -> Self.Value) -> some Job<Self.Value>\n","type":"method"},{"path":"\/documentation\/kubrick\/retryjob\/finished()","title":"func finished() async","type":"method"},{"path":"\/documentation\/kubrick\/retryjob\/map(_:)","title":"func map<NewValue>((Self.Value) async throws -> NewValue) -> some Job<NewValue>\n","type":"method"},{"path":"\/documentation\/kubrick\/retryjob\/maptoresult()","title":"func mapToResult() -> some Job<ExecuteResult<Self.Value>>\n","type":"method"},{"path":"\/documentation\/kubrick\/retryjob\/retry(filter:)","title":"func retry(filter: (Error, Int) async -> Bool) -> some Job<Self.Value>\n","type":"method"},{"path":"\/documentation\/kubrick\/retryjob\/retry(maxattempts:)","title":"func retry(maxAttempts: Int) -> some Job<Self.Value>\n","type":"method"}],"path":"\/documentation\/kubrick\/retryjob\/job-implementations","title":"Job Implementations","type":"symbol"}],"path":"\/documentation\/kubrick\/retryjob","title":"RetryJob","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/kubrick\/timeduration\/*(_:_:)","title":"static func * <I>(TimeDuration, I) -> TimeDuration","type":"op"},{"path":"\/documentation\/kubrick\/timeduration\/\/(_:_:)","title":"static func \/ <I>(TimeDuration, I) -> TimeDuration","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kubrick\/timeduration\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/kubrick\/timeduration\/init(nanoseconds:)-1ff85","title":"init(nanoseconds: Int)","type":"init"},{"path":"\/documentation\/kubrick\/timeduration\/init(nanoseconds:)-9dp6y","title":"init(nanoseconds: Int64)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kubrick\/timeduration\/dateafternow","title":"var dateAfterNow: Date","type":"property"},{"path":"\/documentation\/kubrick\/timeduration\/nanoseconds","title":"var nanoseconds: Int64","type":"property"},{"path":"\/documentation\/kubrick\/timeduration\/timeinterval","title":"var timeInterval: TimeInterval","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/timeduration\/dateafter(date:)","title":"func dateAfter(date: Date) -> Date","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/timeduration\/microseconds(_:)","title":"static func microseconds<I>(I) -> TimeDuration","type":"method"},{"path":"\/documentation\/kubrick\/timeduration\/milliseconds(_:)","title":"static func milliseconds<I>(I) -> TimeDuration","type":"method"},{"path":"\/documentation\/kubrick\/timeduration\/nanoseconds(_:)","title":"static func nanoseconds<I>(I) -> TimeDuration","type":"method"},{"path":"\/documentation\/kubrick\/timeduration\/seconds(_:)-24thg","title":"static func seconds(TimeInterval) -> TimeDuration","type":"method"},{"path":"\/documentation\/kubrick\/timeduration\/seconds(_:)-8hlfo","title":"static func seconds<I>(I) -> TimeDuration","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/kubrick\/timeduration\/+(_:)","title":"static func + (Self) -> Self","type":"op"},{"path":"\/documentation\/kubrick\/timeduration\/+(_:_:)","title":"static func + (TimeDuration, TimeDuration) -> TimeDuration","type":"op"},{"path":"\/documentation\/kubrick\/timeduration\/+=(_:_:)","title":"static func += (inout Self, Self)","type":"op"},{"path":"\/documentation\/kubrick\/timeduration\/-(_:_:)","title":"static func - (TimeDuration, TimeDuration) -> TimeDuration","type":"op"},{"path":"\/documentation\/kubrick\/timeduration\/-=(_:_:)","title":"static func -= (inout Self, Self)","type":"op"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/kubrick\/timeduration\/zero","title":"static let zero: TimeDuration","type":"property"}],"path":"\/documentation\/kubrick\/timeduration\/additivearithmetic-implementations","title":"AdditiveArithmetic Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/kubrick\/timeduration\/'...(_:)-1xro","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/kubrick\/timeduration\/'...(_:)-980gh","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/kubrick\/timeduration\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/kubrick\/timeduration\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/kubrick\/timeduration\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/kubrick\/timeduration\/_(_:_:)-3ox5q","title":"static func < (TimeDuration, TimeDuration) -> Bool","type":"op"},{"path":"\/documentation\/kubrick\/timeduration\/_(_:_:)-4oi18","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/kubrick\/timeduration\/_=(_:_:)-4zkkc","title":"static func <= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/kubrick\/timeduration\/_=(_:_:)-ceo","title":"static func >= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/kubrick\/timeduration\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/kubrick\/timeduration\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/kubrick\/timeduration\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/timeduration\/jobhash(into:)","title":"func jobHash<Hasher>(into: inout Hasher) throws","type":"method"}],"path":"\/documentation\/kubrick\/timeduration\/jobhashable-implementations","title":"JobHashable Implementations","type":"symbol"}],"path":"\/documentation\/kubrick\/timeduration","title":"TimeDuration","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kubrick\/typenamejoberrortyperesolver\/init(errors:)","title":"init(errors: [JobError.Type])","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/typenamejoberrortyperesolver\/resolve(errordomain:)","title":"func resolve(errorDomain: String) -> JobError.Type?","type":"method"}],"path":"\/documentation\/kubrick\/typenamejoberrortyperesolver","title":"TypeNameJobErrorTypeResolver","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kubrick\/typenamesubmittablejobtyperesolver\/init(jobs:)","title":"init(jobs: [SubmittableJob.Type])","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/typenamesubmittablejobtyperesolver\/resolve(jobtypeid:)","title":"func resolve(jobTypeId: String) throws -> SubmittableJob.Type","type":"method"},{"path":"\/documentation\/kubrick\/typenamesubmittablejobtyperesolver\/typeid(of:)","title":"func typeId(of: SubmittableJob.Type) -> String","type":"method"}],"path":"\/documentation\/kubrick\/typenamesubmittablejobtyperesolver","title":"TypeNameSubmittableJobTypeResolver","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kubrick\/typenametyperesolver\/init(jobs:errors:)","title":"init(jobs: [SubmittableJob.Type], errors: [JobError.Type])","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/typenametyperesolver\/resolve(errordomain:)","title":"func resolve(errorDomain: String) -> JobError.Type?","type":"method"},{"path":"\/documentation\/kubrick\/typenametyperesolver\/resolve(jobtypeid:)","title":"func resolve(jobTypeId: String) throws -> SubmittableJob.Type","type":"method"},{"path":"\/documentation\/kubrick\/typenametyperesolver\/typeid(of:)","title":"func typeId(of: SubmittableJob.Type) -> String","type":"method"}],"path":"\/documentation\/kubrick\/typenametyperesolver","title":"TypeNameTypeResolver","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kubrick\/urlsessiondownloadfilejob\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kubrick\/urlsessiondownloadfilejob\/onprogress","title":"var onProgress: URLSessionJobManager.OnProgress?","type":"property"},{"path":"\/documentation\/kubrick\/urlsessiondownloadfilejob\/onstart","title":"var onStart: URLSessionJobManager.OnStart?","type":"property"},{"path":"\/documentation\/kubrick\/urlsessiondownloadfilejob\/request","title":"var request: URLRequest","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/urlsessiondownloadfilejob\/execute()","title":"func execute() async throws -> URLSessionDownloadFileJob.ResultValue","type":"method"},{"path":"\/documentation\/kubrick\/urlsessiondownloadfilejob\/onprogress(_:)","title":"func onProgress(URLSessionJobManager.OnProgress) -> URLSessionDownloadFileJob","type":"method"},{"path":"\/documentation\/kubrick\/urlsessiondownloadfilejob\/onstart(_:)","title":"func onStart(URLSessionJobManager.OnStart) -> URLSessionDownloadFileJob","type":"method"},{"path":"\/documentation\/kubrick\/urlsessiondownloadfilejob\/request(_:)-3xx5r","title":"func request(() -> some Job<URLRequest>) -> URLSessionDownloadFileJob","type":"method"},{"path":"\/documentation\/kubrick\/urlsessiondownloadfilejob\/request(_:)-ztc4","title":"func request(URLRequest) -> URLSessionDownloadFileJob","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/kubrick\/urlsessiondownloadfilejob\/resultvalue","title":"URLSessionDownloadFileJob.ResultValue","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kubrick\/urlsessiondownloadfilejob\/inputdescriptors","title":"var inputDescriptors: [JobInputDescriptor]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/urlsessiondownloadfilejob\/catch(handler:)","title":"func `catch`(handler: (Error) async throws -> Self.Value) -> some Job<Self.Value>\n","type":"method"},{"path":"\/documentation\/kubrick\/urlsessiondownloadfilejob\/finished()","title":"func finished() async","type":"method"},{"path":"\/documentation\/kubrick\/urlsessiondownloadfilejob\/map(_:)","title":"func map<NewValue>((Self.Value) async throws -> NewValue) -> some Job<NewValue>\n","type":"method"},{"path":"\/documentation\/kubrick\/urlsessiondownloadfilejob\/maptoresult()","title":"func mapToResult() -> some Job<ExecuteResult<Self.Value>>\n","type":"method"},{"path":"\/documentation\/kubrick\/urlsessiondownloadfilejob\/retry(filter:)","title":"func retry(filter: (Error, Int) async -> Bool) -> some Job<Self.Value>\n","type":"method"},{"path":"\/documentation\/kubrick\/urlsessiondownloadfilejob\/retry(maxattempts:)","title":"func retry(maxAttempts: Int) -> some Job<Self.Value>\n","type":"method"}],"path":"\/documentation\/kubrick\/urlsessiondownloadfilejob\/job-implementations","title":"Job Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/urlsessiondownloadfilejob\/execute(as:with:for:)","title":"func execute(as: JobKey, with: JobInputResults, for: JobDirector) async -> JobResult<Self.Value>","type":"method"}],"path":"\/documentation\/kubrick\/urlsessiondownloadfilejob\/resultjob-implementations","title":"ResultJob Implementations","type":"symbol"}],"path":"\/documentation\/kubrick\/urlsessiondownloadfilejob","title":"URLSessionDownloadFileJob","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kubrick\/urlsessiondownloadjobresult\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kubrick\/urlsessiondownloadjobresult\/fileurl","title":"var fileURL: URL","type":"property"},{"path":"\/documentation\/kubrick\/urlsessiondownloadjobresult\/response","title":"var response: URLSessionJobResponse","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/urlsessiondownloadjobresult\/jobhash(into:)","title":"func jobHash<Hasher>(into: inout Hasher) throws","type":"method"}],"path":"\/documentation\/kubrick\/urlsessiondownloadjobresult\/jobhashable-implementations","title":"JobHashable Implementations","type":"symbol"}],"path":"\/documentation\/kubrick\/urlsessiondownloadjobresult","title":"URLSessionDownloadJobResult","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kubrick\/urlsessionjobresponse\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kubrick\/urlsessionjobresponse\/headers","title":"var headers: [String : [String]]","type":"property"},{"path":"\/documentation\/kubrick\/urlsessionjobresponse\/statuscode","title":"var statusCode: Int","type":"property"},{"path":"\/documentation\/kubrick\/urlsessionjobresponse\/url","title":"var url: URL","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/urlsessionjobresponse\/header(forname:)","title":"func header(forName: String) -> String?","type":"method"},{"path":"\/documentation\/kubrick\/urlsessionjobresponse\/headers(forname:)","title":"func headers(forName: String) -> [String]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/urlsessionjobresponse\/jobhash(into:)","title":"func jobHash<Hasher>(into: inout Hasher) throws","type":"method"}],"path":"\/documentation\/kubrick\/urlsessionjobresponse\/jobhashable-implementations","title":"JobHashable Implementations","type":"symbol"}],"path":"\/documentation\/kubrick\/urlsessionjobresponse","title":"URLSessionJobResponse","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kubrick\/urlsessionuploadfilejob\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kubrick\/urlsessionuploadfilejob\/fromfile","title":"var fromFile: URL","type":"property"},{"path":"\/documentation\/kubrick\/urlsessionuploadfilejob\/onprogress","title":"var onProgress: URLSessionJobManager.OnProgress?","type":"property"},{"path":"\/documentation\/kubrick\/urlsessionuploadfilejob\/onstart","title":"var onStart: URLSessionJobManager.OnStart?","type":"property"},{"path":"\/documentation\/kubrick\/urlsessionuploadfilejob\/request","title":"var request: URLRequest","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/urlsessionuploadfilejob\/execute()","title":"func execute() async throws -> URLSessionJobResponse","type":"method"},{"path":"\/documentation\/kubrick\/urlsessionuploadfilejob\/fromfile(_:)-268mh","title":"func fromFile(URL) -> URLSessionUploadFileJob","type":"method"},{"path":"\/documentation\/kubrick\/urlsessionuploadfilejob\/fromfile(_:)-9f7yy","title":"func fromFile(() -> some Job<URL>) -> URLSessionUploadFileJob","type":"method"},{"path":"\/documentation\/kubrick\/urlsessionuploadfilejob\/onprogress(_:)","title":"func onProgress(URLSessionJobManager.OnProgress) -> URLSessionUploadFileJob","type":"method"},{"path":"\/documentation\/kubrick\/urlsessionuploadfilejob\/onstart(_:)","title":"func onStart(URLSessionJobManager.OnStart) -> URLSessionUploadFileJob","type":"method"},{"path":"\/documentation\/kubrick\/urlsessionuploadfilejob\/request(_:)-2fkkp","title":"func request(URLRequest) -> URLSessionUploadFileJob","type":"method"},{"path":"\/documentation\/kubrick\/urlsessionuploadfilejob\/request(_:)-75k1f","title":"func request(() -> some Job<URLRequest>) -> URLSessionUploadFileJob","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kubrick\/urlsessionuploadfilejob\/inputdescriptors","title":"var inputDescriptors: [JobInputDescriptor]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/urlsessionuploadfilejob\/catch(handler:)","title":"func `catch`(handler: (Error) async throws -> Self.Value) -> some Job<Self.Value>\n","type":"method"},{"path":"\/documentation\/kubrick\/urlsessionuploadfilejob\/finished()","title":"func finished() async","type":"method"},{"path":"\/documentation\/kubrick\/urlsessionuploadfilejob\/map(_:)","title":"func map<NewValue>((Self.Value) async throws -> NewValue) -> some Job<NewValue>\n","type":"method"},{"path":"\/documentation\/kubrick\/urlsessionuploadfilejob\/maptoresult()","title":"func mapToResult() -> some Job<ExecuteResult<Self.Value>>\n","type":"method"},{"path":"\/documentation\/kubrick\/urlsessionuploadfilejob\/retry(filter:)","title":"func retry(filter: (Error, Int) async -> Bool) -> some Job<Self.Value>\n","type":"method"},{"path":"\/documentation\/kubrick\/urlsessionuploadfilejob\/retry(maxattempts:)","title":"func retry(maxAttempts: Int) -> some Job<Self.Value>\n","type":"method"}],"path":"\/documentation\/kubrick\/urlsessionuploadfilejob\/job-implementations","title":"Job Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/urlsessionuploadfilejob\/execute(as:with:for:)","title":"func execute(as: JobKey, with: JobInputResults, for: JobDirector) async -> JobResult<Self.Value>","type":"method"}],"path":"\/documentation\/kubrick\/urlsessionuploadfilejob\/resultjob-implementations","title":"ResultJob Implementations","type":"symbol"}],"path":"\/documentation\/kubrick\/urlsessionuploadfilejob","title":"URLSessionUploadFileJob","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kubrick\/usernotificationjob\/init(content:transform:)","title":"init(content: UNNotificationContent, transform: UserNotificationJob<ResultValue>.Transform)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/usernotificationjob\/execute()","title":"func execute() async throws -> ResultValue","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/kubrick\/usernotificationjob\/transform","title":"UserNotificationJob.Transform","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kubrick\/usernotificationjob\/inputdescriptors","title":"var inputDescriptors: [JobInputDescriptor]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/usernotificationjob\/catch(handler:)","title":"func `catch`(handler: (Error) async throws -> Self.Value) -> some Job<Self.Value>\n","type":"method"},{"path":"\/documentation\/kubrick\/usernotificationjob\/finished()","title":"func finished() async","type":"method"},{"path":"\/documentation\/kubrick\/usernotificationjob\/map(_:)","title":"func map<NewValue>((Self.Value) async throws -> NewValue) -> some Job<NewValue>\n","type":"method"},{"path":"\/documentation\/kubrick\/usernotificationjob\/maptoresult()","title":"func mapToResult() -> some Job<ExecuteResult<Self.Value>>\n","type":"method"},{"path":"\/documentation\/kubrick\/usernotificationjob\/retry(filter:)","title":"func retry(filter: (Error, Int) async -> Bool) -> some Job<Self.Value>\n","type":"method"},{"path":"\/documentation\/kubrick\/usernotificationjob\/retry(maxattempts:)","title":"func retry(maxAttempts: Int) -> some Job<Self.Value>\n","type":"method"}],"path":"\/documentation\/kubrick\/usernotificationjob\/job-implementations","title":"Job Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/usernotificationjob\/execute(as:with:for:)","title":"func execute(as: JobKey, with: JobInputResults, for: JobDirector) async -> JobResult<Self.Value>","type":"method"}],"path":"\/documentation\/kubrick\/usernotificationjob\/resultjob-implementations","title":"ResultJob Implementations","type":"symbol"}],"path":"\/documentation\/kubrick\/usernotificationjob","title":"UserNotificationJob","type":"struct"},{"title":"Variables","type":"groupMarker"},{"path":"\/documentation\/kubrick\/joberrortyperesolverkey","title":"let jobErrorTypeResolverKey: CodingUserInfoKey","type":"var"},{"path":"\/documentation\/kubrick\/submittablejobtyperesolverkey","title":"let submittableJobTypeResolverKey: CodingUserInfoKey","type":"var"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/kubrick\/anyjobinputresult","title":"AnyJobInputResult","type":"typealias"},{"path":"\/documentation\/kubrick\/anyjobresult","title":"AnyJobResult","type":"typealias"},{"path":"\/documentation\/kubrick\/joberror","title":"JobError","type":"typealias"},{"path":"\/documentation\/kubrick\/jobhasher","title":"JobHasher","type":"typealias"},{"path":"\/documentation\/kubrick\/jobid","title":"JobID","type":"typealias"},{"path":"\/documentation\/kubrick\/jobinputresult","title":"JobInputResult","type":"typealias"},{"path":"\/documentation\/kubrick\/jobinputresults","title":"JobInputResults","type":"typealias"},{"path":"\/documentation\/kubrick\/jobresult","title":"JobResult","type":"typealias"},{"path":"\/documentation\/kubrick\/jobvalue","title":"JobValue","type":"typealias"},{"path":"\/documentation\/kubrick\/uniqueid","title":"UniqueID","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/kubrick\/executeresult\/failure(_:)","title":"case failure(Error)","type":"case"},{"path":"\/documentation\/kubrick\/executeresult\/success(_:)","title":"case success(Success)","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/executeresult\/get()","title":"func get() throws -> Success","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kubrick\/executeresult\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/kubrick\/executeresult\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/executeresult\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/kubrick\/executeresult\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/executeresult\/jobhash(into:)-47afa","title":"func jobHash<Hasher>(into: inout Hasher) throws","type":"method"},{"path":"\/documentation\/kubrick\/executeresult\/jobhash(into:)-7mhxm","title":"func jobHash<Hasher>(into: inout Hasher) throws","type":"method"}],"path":"\/documentation\/kubrick\/executeresult\/jobhashable-implementations","title":"JobHashable Implementations","type":"symbol"}],"path":"\/documentation\/kubrick\/executeresult","title":"ExecuteResult","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/kubrick\/jobdirectorerror\/invaliddirectorstate","title":"case invalidDirectorState","type":"case"},{"path":"\/documentation\/kubrick\/jobdirectorerror\/unabletocreatejobsdirectory","title":"case unableToCreateJobsDirectory","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kubrick\/jobdirectorerror\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/kubrick\/jobdirectorerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/kubrick\/jobdirectorerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kubrick\/jobdirectorerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/kubrick\/jobdirectorerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/kubrick\/jobdirectorerror","title":"JobDirectorError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/kubrick\/jobdirectormode\/assistant(name:)","title":"case assistant(name: String)","type":"case"},{"path":"\/documentation\/kubrick\/jobdirectormode\/principal","title":"case principal","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kubrick\/jobdirectormode\/isassistant","title":"var isAssistant: Bool","type":"property"},{"path":"\/documentation\/kubrick\/jobdirectormode\/isprincipal","title":"var isPrincipal: Bool","type":"property"}],"path":"\/documentation\/kubrick\/jobdirectormode","title":"JobDirectorMode","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/kubrick\/jobexecutionerror\/invariantviolation(_:)","title":"case invariantViolation(JobExecutionError.InvariantViolation)","type":"case"},{"path":"\/documentation\/kubrick\/jobexecutionerror\/multipleinputsfailed(_:)","title":"case multipleInputsFailed([Error])","type":"case"},{"path":"\/documentation\/kubrick\/jobexecutionerror\/unboundinputs(jobtype:inputtypes:)-swift.enum.case","title":"case unboundInputs(jobType: String, inputTypes: [String])","type":"case"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/jobexecutionerror\/unboundinputs(jobtype:inputtypes:)-swift.type.method","title":"static func unboundInputs(jobType: Any.Type, inputTypes: [Any.Type]) -> JobExecutionError","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/kubrick\/jobexecutionerror\/invariantviolation\/executeinvokedwithfailedinput","title":"case executeInvokedWithFailedInput","type":"case"},{"path":"\/documentation\/kubrick\/jobexecutionerror\/invariantviolation\/inputresultinvalid","title":"case inputResultInvalid","type":"case"},{"path":"\/documentation\/kubrick\/jobexecutionerror\/invariantviolation\/inputresultmissing","title":"case inputResultMissing","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kubrick\/jobexecutionerror\/invariantviolation\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/kubrick\/jobexecutionerror\/invariantviolation\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/kubrick\/jobexecutionerror\/invariantviolation\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/kubrick\/jobexecutionerror\/invariantviolation","title":"JobExecutionError.InvariantViolation","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kubrick\/jobexecutionerror\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/kubrick\/jobexecutionerror\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/jobexecutionerror\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/kubrick\/jobexecutionerror\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kubrick\/jobexecutionerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/kubrick\/jobexecutionerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/kubrick\/jobexecutionerror","title":"JobExecutionError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/kubrick\/jobtransfererror\/transfertoprincipaldirector","title":"case transferToPrincipalDirector","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kubrick\/jobtransfererror\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/kubrick\/jobtransfererror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/kubrick\/jobtransfererror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kubrick\/jobtransfererror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/kubrick\/jobtransfererror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/kubrick\/jobtransfererror","title":"JobTransferError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/kubrick\/nserrorcodingtransformer\/instance","title":"case instance","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/nserrorcodingtransformer\/decode(_:)","title":"func decode(Data) throws -> NSError","type":"method"},{"path":"\/documentation\/kubrick\/nserrorcodingtransformer\/encode(_:)","title":"func encode(NSError) throws -> Data","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/kubrick\/nserrorcodingtransformer\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/kubrick\/nserrorcodingtransformer\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/kubrick\/nserrorcodingtransformer","title":"NSErrorCodingTransformer","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/kubrick\/novalue\/instance","title":"case instance","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kubrick\/novalue\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/kubrick\/novalue\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/kubrick\/novalue\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/novalue\/jobhash(into:)","title":"func jobHash<Hasher>(into: inout Hasher) throws","type":"method"}],"path":"\/documentation\/kubrick\/novalue\/jobhashable-implementations","title":"JobHashable Implementations","type":"symbol"}],"path":"\/documentation\/kubrick\/novalue","title":"NoValue","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/kubrick\/urlsessionjoberror\/invalidresponsestatus","title":"case invalidResponseStatus","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/kubrick\/urlsessionjoberror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/kubrick\/urlsessionjoberror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kubrick\/urlsessionjoberror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/kubrick\/urlsessionjoberror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/kubrick\/urlsessionjoberror","title":"URLSessionJobError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/kubrick\/urlsessionjobmanagererror\/downloadedfilemissing","title":"case downloadedFileMissing","type":"case"},{"path":"\/documentation\/kubrick\/urlsessionjobmanagererror\/invalidresponse","title":"case invalidResponse","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kubrick\/urlsessionjobmanagererror\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/kubrick\/urlsessionjobmanagererror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/kubrick\/urlsessionjobmanagererror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kubrick\/urlsessionjobmanagererror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/kubrick\/urlsessionjobmanagererror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/kubrick\/urlsessionjobmanagererror","title":"URLSessionJobManagerError","type":"enum"},{"title":"Extended Modules","type":"groupMarker"},{"children":[{"title":"Extended Types","type":"groupMarker"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/kubrick\/dispatch\/dispatchsource\/filesystemevent\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/kubrick\/dispatch\/dispatchsource\/filesystemevent\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"}],"path":"\/documentation\/kubrick\/dispatch\/dispatchsource\/filesystemevent","title":"DispatchSource.FileSystemEvent","type":"extension"}],"path":"\/documentation\/kubrick\/dispatch\/dispatchsource","title":"DispatchSource","type":"extension"}],"path":"\/documentation\/kubrick\/dispatch","title":"Dispatch","type":"extension"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kubrick\/foundation\/data\/init(base64encodedunpadded:)","title":"init?(base64EncodedUnpadded: String)","type":"init"},{"path":"\/documentation\/kubrick\/foundation\/data\/init(base64urlencoded:)","title":"init?(base64UrlEncoded: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/foundation\/data\/base64urlencodedstring()","title":"func base64UrlEncodedString() -> String","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/foundation\/data\/jobhash(into:)","title":"func jobHash<Hasher>(into: inout Hasher) throws","type":"method"}],"path":"\/documentation\/kubrick\/foundation\/data\/jobhashable-implementations","title":"JobHashable Implementations","type":"symbol"}],"path":"\/documentation\/kubrick\/foundation\/data","title":"Data","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/foundation\/date\/jobhash(into:)","title":"func jobHash<Hasher>(into: inout Hasher) throws","type":"method"}],"path":"\/documentation\/kubrick\/foundation\/date\/jobhashable-implementations","title":"JobHashable Implementations","type":"symbol"}],"path":"\/documentation\/kubrick\/foundation\/date","title":"Date","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/foundation\/url\/jobhash(into:)","title":"func jobHash<Hasher>(into: inout Hasher) throws","type":"method"}],"path":"\/documentation\/kubrick\/foundation\/url\/jobhashable-implementations","title":"JobHashable Implementations","type":"symbol"}],"path":"\/documentation\/kubrick\/foundation\/url","title":"URL","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kubrick\/foundation\/urlrequest\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/kubrick\/foundation\/urlrequest\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/foundation\/urlrequest\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/kubrick\/foundation\/urlrequest\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/foundation\/urlrequest\/jobhash(into:)","title":"func jobHash<Hasher>(into: inout Hasher) throws","type":"method"}],"path":"\/documentation\/kubrick\/foundation\/urlrequest\/jobhashable-implementations","title":"JobHashable Implementations","type":"symbol"}],"path":"\/documentation\/kubrick\/foundation\/urlrequest","title":"URLRequest","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/foundation\/uuid\/jobhash(into:)","title":"func jobHash<Hasher>(into: inout Hasher) throws","type":"method"}],"path":"\/documentation\/kubrick\/foundation\/uuid\/jobhashable-implementations","title":"JobHashable Implementations","type":"symbol"}],"path":"\/documentation\/kubrick\/foundation\/uuid","title":"UUID","type":"extension"}],"path":"\/documentation\/kubrick\/foundation","title":"Foundation","type":"extension"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/friendlyid\/id\/builder\/build()","title":"func build() -> JobID","type":"method"},{"path":"\/documentation\/kubrick\/friendlyid\/id\/builder\/update(value:)","title":"func update<Value>(value: Value) throws -> Id.Builder","type":"method"}],"path":"\/documentation\/kubrick\/friendlyid\/id\/builder","title":"Id.Builder","type":"struct"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/friendlyid\/id\/builder()","title":"static func builder() -> Id.Builder","type":"method"},{"path":"\/documentation\/kubrick\/friendlyid\/id\/generate()","title":"static func generate() -> UniqueID","type":"method"},{"path":"\/documentation\/kubrick\/friendlyid\/id\/generatestring()","title":"static func generateString() -> String","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/friendlyid\/id\/jobhash(into:)","title":"func jobHash<Hasher>(into: inout Hasher) throws","type":"method"}],"path":"\/documentation\/kubrick\/friendlyid\/id\/jobhashable-implementations","title":"JobHashable Implementations","type":"symbol"}],"path":"\/documentation\/kubrick\/friendlyid\/id","title":"Id","type":"extension"}],"path":"\/documentation\/kubrick\/friendlyid","title":"FriendlyId","type":"extension"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/swift\/array\/jobhash(into:)","title":"func jobHash<Hasher>(into: inout Hasher) throws","type":"method"}],"path":"\/documentation\/kubrick\/swift\/array\/jobhashable-implementations","title":"JobHashable Implementations","type":"symbol"}],"path":"\/documentation\/kubrick\/swift\/array","title":"Array","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/swift\/bool\/jobhash(into:)","title":"func jobHash<Hasher>(into: inout Hasher) throws","type":"method"}],"path":"\/documentation\/kubrick\/swift\/bool\/jobhashable-implementations","title":"JobHashable Implementations","type":"symbol"}],"path":"\/documentation\/kubrick\/swift\/bool","title":"Bool","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/swift\/dictionary\/jobhash(into:)","title":"func jobHash<Hasher>(into: inout Hasher) throws","type":"method"}],"path":"\/documentation\/kubrick\/swift\/dictionary\/jobhashable-implementations","title":"JobHashable Implementations","type":"symbol"}],"path":"\/documentation\/kubrick\/swift\/dictionary","title":"Dictionary","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/swift\/double\/jobhash(into:)","title":"func jobHash<Hasher>(into: inout Hasher) throws","type":"method"}],"path":"\/documentation\/kubrick\/swift\/double\/jobhashable-implementations","title":"JobHashable Implementations","type":"symbol"}],"path":"\/documentation\/kubrick\/swift\/double","title":"Double","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/swift\/float\/jobhash(into:)","title":"func jobHash<Hasher>(into: inout Hasher) throws","type":"method"}],"path":"\/documentation\/kubrick\/swift\/float\/jobhashable-implementations","title":"JobHashable Implementations","type":"symbol"}],"path":"\/documentation\/kubrick\/swift\/float","title":"Float","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/swift\/int\/jobhash(into:)","title":"func jobHash<Hasher>(into: inout Hasher) throws","type":"method"}],"path":"\/documentation\/kubrick\/swift\/int\/jobhashable-implementations","title":"JobHashable Implementations","type":"symbol"}],"path":"\/documentation\/kubrick\/swift\/int","title":"Int","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/swift\/int16\/jobhash(into:)","title":"func jobHash<Hasher>(into: inout Hasher) throws","type":"method"}],"path":"\/documentation\/kubrick\/swift\/int16\/jobhashable-implementations","title":"JobHashable Implementations","type":"symbol"}],"path":"\/documentation\/kubrick\/swift\/int16","title":"Int16","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/swift\/int32\/jobhash(into:)","title":"func jobHash<Hasher>(into: inout Hasher) throws","type":"method"}],"path":"\/documentation\/kubrick\/swift\/int32\/jobhashable-implementations","title":"JobHashable Implementations","type":"symbol"}],"path":"\/documentation\/kubrick\/swift\/int32","title":"Int32","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/swift\/int64\/jobhash(into:)","title":"func jobHash<Hasher>(into: inout Hasher) throws","type":"method"}],"path":"\/documentation\/kubrick\/swift\/int64\/jobhashable-implementations","title":"JobHashable Implementations","type":"symbol"}],"path":"\/documentation\/kubrick\/swift\/int64","title":"Int64","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/swift\/int8\/jobhash(into:)","title":"func jobHash<Hasher>(into: inout Hasher) throws","type":"method"}],"path":"\/documentation\/kubrick\/swift\/int8\/jobhashable-implementations","title":"JobHashable Implementations","type":"symbol"}],"path":"\/documentation\/kubrick\/swift\/int8","title":"Int8","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/swift\/set\/jobhash(into:)-51uh5","title":"func jobHash<Hasher>(into: inout Hasher) throws","type":"method"},{"path":"\/documentation\/kubrick\/swift\/set\/jobhash(into:)-9tqlb","title":"func jobHash<Hasher>(into: inout Hasher) throws","type":"method"}],"path":"\/documentation\/kubrick\/swift\/set\/jobhashable-implementations","title":"JobHashable Implementations","type":"symbol"}],"path":"\/documentation\/kubrick\/swift\/set","title":"Set","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/swift\/string\/jobhash(into:)","title":"func jobHash<Hasher>(into: inout Hasher) throws","type":"method"}],"path":"\/documentation\/kubrick\/swift\/string\/jobhashable-implementations","title":"JobHashable Implementations","type":"symbol"}],"path":"\/documentation\/kubrick\/swift\/string","title":"String","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/swift\/uint\/jobhash(into:)","title":"func jobHash<Hasher>(into: inout Hasher) throws","type":"method"}],"path":"\/documentation\/kubrick\/swift\/uint\/jobhashable-implementations","title":"JobHashable Implementations","type":"symbol"}],"path":"\/documentation\/kubrick\/swift\/uint","title":"UInt","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/swift\/uint16\/jobhash(into:)","title":"func jobHash<Hasher>(into: inout Hasher) throws","type":"method"}],"path":"\/documentation\/kubrick\/swift\/uint16\/jobhashable-implementations","title":"JobHashable Implementations","type":"symbol"}],"path":"\/documentation\/kubrick\/swift\/uint16","title":"UInt16","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/swift\/uint32\/jobhash(into:)","title":"func jobHash<Hasher>(into: inout Hasher) throws","type":"method"}],"path":"\/documentation\/kubrick\/swift\/uint32\/jobhashable-implementations","title":"JobHashable Implementations","type":"symbol"}],"path":"\/documentation\/kubrick\/swift\/uint32","title":"UInt32","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/swift\/uint64\/jobhash(into:)","title":"func jobHash<Hasher>(into: inout Hasher) throws","type":"method"}],"path":"\/documentation\/kubrick\/swift\/uint64\/jobhashable-implementations","title":"JobHashable Implementations","type":"symbol"}],"path":"\/documentation\/kubrick\/swift\/uint64","title":"UInt64","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/swift\/uint8\/jobhash(into:)","title":"func jobHash<Hasher>(into: inout Hasher) throws","type":"method"}],"path":"\/documentation\/kubrick\/swift\/uint8\/jobhashable-implementations","title":"JobHashable Implementations","type":"symbol"}],"path":"\/documentation\/kubrick\/swift\/uint8","title":"UInt8","type":"extension"},{"title":"Extended Enumerations","type":"groupMarker"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/swift\/optional\/jobhash(into:)-2ib3i","title":"func jobHash<Hasher>(into: inout Hasher) throws","type":"method"},{"path":"\/documentation\/kubrick\/swift\/optional\/jobhash(into:)-51uhc","title":"func jobHash<Hasher>(into: inout Hasher) throws","type":"method"}],"path":"\/documentation\/kubrick\/swift\/optional\/jobhashable-implementations","title":"JobHashable Implementations","type":"symbol"}],"path":"\/documentation\/kubrick\/swift\/optional","title":"Optional","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/kubrick\/swift\/result\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/kubrick\/swift\/result\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/swift\/result\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/kubrick\/swift\/result\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/kubrick\/swift\/result\/jobhash(into:)-5x210","title":"func jobHash<Hasher>(into: inout Hasher) throws","type":"method"},{"path":"\/documentation\/kubrick\/swift\/result\/jobhash(into:)-74zgl","title":"func jobHash<Hasher>(into: inout Hasher) throws","type":"method"}],"path":"\/documentation\/kubrick\/swift\/result\/jobhashable-implementations","title":"JobHashable Implementations","type":"symbol"}],"path":"\/documentation\/kubrick\/swift\/result","title":"Result","type":"extension"}],"path":"\/documentation\/kubrick\/swift","title":"Swift","type":"extension"}],"icon":"logo.png","path":"\/documentation\/kubrick","title":"Kubrick","type":"module"}]},"references":{"logo.png":{"alt":null,"identifier":"logo.png","type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/logo.png"},{"traits":["2x","light"],"url":"\/images\/logo@2x.png"}]}},"schemaVersion":{"major":0,"minor":1,"patch":1}}